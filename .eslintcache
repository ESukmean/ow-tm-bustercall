[{"/home/esukmean/esukmean-com/ow-tm-bustercall/src/index.js":"1","/home/esukmean/esukmean-com/ow-tm-bustercall/src/App.js":"2","/home/esukmean/esukmean-com/ow-tm-bustercall/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610065877991,"results":"4","hashOfConfig":"5"},{"size":4510,"mtime":1610076717090,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610065877991,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"3zmxx8",{"filePath":"11","messages":"12","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/home/esukmean/esukmean-com/ow-tm-bustercall/src/index.js",[],["16","17"],"/home/esukmean/esukmean-com/ow-tm-bustercall/src/App.js",["18","19"],"import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport imgTM from './assets/tm.png';\nimport * as Bootstrap from 'react-bootstrap';\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n\tconst [loginInfo, setLoginInfo] = useState({\n\t\t'result': false,\n\t\t'msg': '로그인이 필요합니다'\n\t});\n\tconst [phoneNoMiddle, setPhoneNoMiddle] = useState('');\n\tconst [phoneNoEnd, setPhoneNoEnd] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [processRegister, setProcessRegister] = useState(false);\n\n\tconst buildPhoneNo = () => \"010\" + phoneNoMiddle.toString() + phoneNoEnd.toString();\n\tconst buildFormData = () => { \n\t\tlet formData = new FormData(); \n\t\tconst phoneNo = parseInt(buildPhoneNo()).toString();\n\t\tif (phoneNo.length < 9 || phoneNo.length > 10) { alert('부정확한 전화번호입니다.'); return false; }\n\t\tformData.append('phoneNo', buildPhoneNo()); \n\n\t\tif (password.length < 8) { alert('비밀번호는 최소 8글자 이상이어야 합니다.'); return false; }\n\t\tformData.append('password', password); \n\t\t\n\t\treturn formData; \n\t};\n\tconst handleLoginBtn = () => {\n\t\tlet formData = buildFormData();\n\t\tfetch(\"/api/\" + buildPhoneNo(), {method: 'POST', body: formData}).then((resp) => resp.json()).then((json) => {\n\t\t\tsetLoginInfo(json);\n\n\t\t\tif (json.result === false) { alert(json.msg); return; }\n\t\t});\n\t};\n\tconst handleRegisterBtn = () => {\n\t\tif (buildFormData() === false) return;\n\t\tsetProcessRegister(true);\n\t};\n\t\n\treturn (\n\t\t// <Router>\n\t\t\t<div class=\"main-card\">\n\t\t\t\t<header>\n\t\t\t\t\t<img src={imgTM} alt=\"완전 난장판\"/>\n\t\t\t\t\t<h1>완전 난장판 알리미</h1>\n\t\t\t\t</header>\n\t\t\t\t<Bootstrap.Form>\n\t\t\t\t\t<Bootstrap.Form.Label>알림 받을 전화번호 (SMS)</Bootstrap.Form.Label>\n\t\t\t\t\t<Bootstrap.Form.Row>\n\t\t\t\t\t\t<Bootstrap.Form.Group as={Bootstrap.Col}><Bootstrap.Form.Control value=\"010\" readonly=\"true\" /></Bootstrap.Form.Group>\n\t\t\t\t\t\t<Bootstrap.Form.Group as={Bootstrap.Col}><Bootstrap.Form.Control placeholder=\"9800\" value={phoneNoMiddle} onChange={(e) => setPhoneNoMiddle(e.target.value)} minLength=\"4\" maxLength=\"4\" required/></Bootstrap.Form.Group>\n\t\t\t\t\t\t<Bootstrap.Form.Group as={Bootstrap.Col}><Bootstrap.Form.Control placeholder=\"0336\" value={phoneNoEnd} onChange={(e) => setPhoneNoEnd(e.target.value)} minLength=\"4\" maxLength=\"4\" required/></Bootstrap.Form.Group>\n\t\t\t\t\t</Bootstrap.Form.Row>\n\t\t\t\t\t<Bootstrap.Form.Label>비밀번호</Bootstrap.Form.Label>\n\t\t\t\t\t<Bootstrap.Form.Control type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} minLength=\"8\" placeholder=\"비밀번호 (최소 8글자)\" required/>\n\t\t\t\t\t<br/>\n\t\t\t\t\t<Bootstrap.Container fluid>\n  \t\t\t\t\t<Bootstrap.Row>\n\t\t\t\t\t\t\t<Bootstrap.Col style={{paddingLeft: 0}}><Bootstrap.Button variant=\"primary\" block onClick={handleLoginBtn}>로그인</Bootstrap.Button></Bootstrap.Col>\n\t\t\t\t\t\t\t<Bootstrap.Col style={{paddingRight: 0}}><Bootstrap.Button variant=\"light\" block onClick={handleRegisterBtn}>등록</Bootstrap.Button></Bootstrap.Col>\n\t\t\t\t\t\t</Bootstrap.Row>\n\t\t\t\t\t</Bootstrap.Container>\n\t\t\t\t</Bootstrap.Form>\n\t\t\t\t<div style={{padding: '16px'}}>\n\t\t\t\t\t{loginInfo.result == false && <Bootstrap.Alert variant=\"danger\">{ loginInfo.msg.split('\\n').map(line => { return (<span>{line}<br /></span>)}) }</Bootstrap.Alert> }\n\t\t\t\t</div>\n\t\t\t\t{processRegister && <RegisterForm handleClose={() => setProcessRegister(false)} formData={buildFormData()} /> }\n\t\t\t</div>\n\t\t// </Router>\n\t);\n}\n\nconst RegisterForm = (props) => {\n\tconst { handleClose, formData } = props;\n\tconst [battleTag, setBattleTag] = useState('');\n\tconst submit = () => {\n\t\tformData.append('battleTag', battleTag);\n\n\t\tfetch(\"/api/\" + formData.get('phoneNo'), {method: 'PUT', body: formData}).then((resp) => resp.json()).then((json) => {\n\t\t\talert(json.msg);\n\t\t\thandleClose();\n\t\t});\n\t};\n\n\treturn (\n\t\t<Bootstrap.Modal show={true} onHide={handleClose}>\n\t\t\t<Bootstrap.Modal.Header closeButton>\n\t\t\t\t<Bootstrap.Modal.Title>배틀테그 확인</Bootstrap.Modal.Title>\n\t\t\t</Bootstrap.Modal.Header>\n\n\t\t\t<Bootstrap.Modal.Body>\n\t\t\t\t<Bootstrap.Form.Control type=\"text\" value={battleTag} onChange={(e) => setBattleTag(e.target.value)} placeholder=\"배틀테그를 입력해주세요\" />\n\t\t\t</Bootstrap.Modal.Body>\n\n\t\t\t<Bootstrap.Modal.Footer>\n\t\t\t\t<Bootstrap.Button variant=\"secondary\" onClick={handleClose}>취소(닫기)</Bootstrap.Button>\n\t\t\t\t<Bootstrap.Button variant=\"primary\" onClick={submit}>저장(심사 요청)</Bootstrap.Button>\n\t\t\t</Bootstrap.Modal.Footer>\n\t\t</Bootstrap.Modal>\n\t);\n}\n\n\nexport default App;\n","/home/esukmean/esukmean-com/ow-tm-bustercall/src/reportWebVitals.js",[],{"ruleId":"20","replacedBy":"21"},{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","severity":1,"message":"25","line":6,"column":20,"nodeType":"26","messageId":"27","endLine":6,"endColumn":29},{"ruleId":"28","severity":1,"message":"29","line":68,"column":24,"nodeType":"30","messageId":"31","endLine":68,"endColumn":26},"no-native-reassign",["32"],"no-negated-in-lhs",["33"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]